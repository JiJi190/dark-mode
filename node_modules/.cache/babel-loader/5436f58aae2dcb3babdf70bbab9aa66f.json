{"ast":null,"code":"import _slicedToArray from \"Z:\\\\lambda\\\\Advanced React\\\\dark-mode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\n\nvar useLocalStorage = function useLocalStorage(key, initialValue) {\n  var _useState = useState(function () {\n    var item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : initialValue;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      storedValue = _useState2[0],\n      setStoredValue = _useState2[1];\n\n  var setValue = function setValue(value) {\n    localStorage.setItem(key, JSON.stringify(value));\n    setStoredValue(value);\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;","map":{"version":3,"sources":["Z:\\lambda\\Advanced React\\dark-mode\\src\\hooks\\useLocalStorage.js"],"names":["React","useState","useLocalStorage","key","initialValue","item","localStorage","getItem","JSON","parse","storedValue","setStoredValue","setValue","value","setItem","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,YAAN,EAAuB;AAAA,kBACLH,QAAQ,CAAC,YAAM;AACnD,QAAMI,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAAb;AACA,WAAOE,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAH,GAAsBD,YAAjC;AACD,GAH6C,CADH;AAAA;AAAA,MACpCM,WADoC;AAAA,MACvBC,cADuB;;AAM3C,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxBP,IAAAA,YAAY,CAACQ,OAAb,CAAqBX,GAArB,EAA0BK,IAAI,CAACO,SAAL,CAAeF,KAAf,CAA1B;AACAF,IAAAA,cAAc,CAACE,KAAD,CAAd;AACD,GAHD;;AAKA,SAAO,CAACH,WAAD,EAAcE,QAAd,CAAP;AACD,CAZH;;AAcE,eAAeV,eAAf","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      const item = localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    });\r\n  \r\n    const setValue = value => {\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n      setStoredValue(value);\r\n    };\r\n  \r\n    return [storedValue, setValue];\r\n  };\r\n\r\n  export default useLocalStorage;"]},"metadata":{},"sourceType":"module"}